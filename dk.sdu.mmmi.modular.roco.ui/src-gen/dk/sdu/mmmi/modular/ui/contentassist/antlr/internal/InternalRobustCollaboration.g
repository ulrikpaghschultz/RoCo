/*
* generated by Xtext
*/
grammar InternalRobustCollaboration;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package dk.sdu.mmmi.modular.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.modular.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.modular.services.RobustCollaborationGrammarAccess;

}

@parser::members {
 
 	private RobustCollaborationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RobustCollaborationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramElement
entryRuleProgramElement 
:
{ before(grammarAccess.getProgramElementRule()); }
	 ruleProgramElement
{ after(grammarAccess.getProgramElementRule()); } 
	 EOF 
;

// Rule ProgramElement
ruleProgramElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramElementAccess().getAlternatives()); }
(rule__ProgramElement__Alternatives)
{ after(grammarAccess.getProgramElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExternalName
entryRuleExternalName 
:
{ before(grammarAccess.getExternalNameRule()); }
	 ruleExternalName
{ after(grammarAccess.getExternalNameRule()); } 
	 EOF 
;

// Rule ExternalName
ruleExternalName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalNameAccess().getGroup()); }
(rule__ExternalName__Group__0)
{ after(grammarAccess.getExternalNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalType
entryRuleLocalType 
:
{ before(grammarAccess.getLocalTypeRule()); }
	 ruleLocalType
{ after(grammarAccess.getLocalTypeRule()); } 
	 EOF 
;

// Rule LocalType
ruleLocalType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalTypeAccess().getAlternatives()); }
(rule__LocalType__Alternatives)
{ after(grammarAccess.getLocalTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScopeDefiningElement
entryRuleScopeDefiningElement 
:
{ before(grammarAccess.getScopeDefiningElementRule()); }
	 ruleScopeDefiningElement
{ after(grammarAccess.getScopeDefiningElementRule()); } 
	 EOF 
;

// Rule ScopeDefiningElement
ruleScopeDefiningElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeDefiningElementAccess().getAlternatives()); }
(rule__ScopeDefiningElement__Alternatives)
{ after(grammarAccess.getScopeDefiningElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDef
entryRuleTypeDef 
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDefAccess().getGroup()); }
(rule__TypeDef__Group__0)
{ after(grammarAccess.getTypeDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumDef
entryRuleEnumDef 
:
{ before(grammarAccess.getEnumDefRule()); }
	 ruleEnumDef
{ after(grammarAccess.getEnumDefRule()); } 
	 EOF 
;

// Rule EnumDef
ruleEnumDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumDefAccess().getGroup()); }
(rule__EnumDef__Group__0)
{ after(grammarAccess.getEnumDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnsemble
entryRuleEnsemble 
:
{ before(grammarAccess.getEnsembleRule()); }
	 ruleEnsemble
{ after(grammarAccess.getEnsembleRule()); } 
	 EOF 
;

// Rule Ensemble
ruleEnsemble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnsembleAccess().getGroup()); }
(rule__Ensemble__Group__0)
{ after(grammarAccess.getEnsembleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getGroup()); }
(rule__Role__Group__0)
{ after(grammarAccess.getRoleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequire
entryRuleRequire 
:
{ before(grammarAccess.getRequireRule()); }
	 ruleRequire
{ after(grammarAccess.getRequireRule()); } 
	 EOF 
;

// Rule Require
ruleRequire
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequireAccess().getGroup()); }
(rule__Require__Group__0)
{ after(grammarAccess.getRequireAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehavior
entryRuleBehavior 
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorAccess().getGroup()); }
(rule__Behavior__Group__0)
{ after(grammarAccess.getBehaviorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getAlternatives()); }
(rule__Expr__Alternatives)
{ after(grammarAccess.getExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariable
entryRuleLocalVariable 
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableAccess().getNameAssignment()); }
(rule__LocalVariable__NameAssignment)
{ after(grammarAccess.getLocalVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryExpr
entryRuleBinaryExpr 
:
{ before(grammarAccess.getBinaryExprRule()); }
	 ruleBinaryExpr
{ after(grammarAccess.getBinaryExprRule()); } 
	 EOF 
;

// Rule BinaryExpr
ruleBinaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryExprAccess().getGroup()); }
(rule__BinaryExpr__Group__0)
{ after(grammarAccess.getBinaryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryOperator
entryRuleBinaryOperator 
:
{ before(grammarAccess.getBinaryOperatorRule()); }
	 ruleBinaryOperator
{ after(grammarAccess.getBinaryOperatorRule()); } 
	 EOF 
;

// Rule BinaryOperator
ruleBinaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
(rule__BinaryOperator__Alternatives)
{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForLoop
entryRuleForLoop 
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForLoopAccess().getGroup()); }
(rule__ForLoop__Group__0)
{ after(grammarAccess.getForLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional
entryRuleConditional 
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAccess().getGroup()); }
(rule__Conditional__Group__0)
{ after(grammarAccess.getConditionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelfOperation
entryRuleSelfOperation 
:
{ before(grammarAccess.getSelfOperationRule()); }
	 ruleSelfOperation
{ after(grammarAccess.getSelfOperationRule()); } 
	 EOF 
;

// Rule SelfOperation
ruleSelfOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelfOperationAccess().getGroup()); }
(rule__SelfOperation__Group__0)
{ after(grammarAccess.getSelfOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdate
entryRuleUpdate 
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateAccess().getGroup()); }
(rule__Update__Group__0)
{ after(grammarAccess.getUpdateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDefinition
entryRuleConstantDefinition 
:
{ before(grammarAccess.getConstantDefinitionRule()); }
	 ruleConstantDefinition
{ after(grammarAccess.getConstantDefinitionRule()); } 
	 EOF 
;

// Rule ConstantDefinition
ruleConstantDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup()); }
(rule__ConstantDefinition__Group__0)
{ after(grammarAccess.getConstantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantAssignment
entryRuleConstantAssignment 
:
{ before(grammarAccess.getConstantAssignmentRule()); }
	 ruleConstantAssignment
{ after(grammarAccess.getConstantAssignmentRule()); } 
	 EOF 
;

// Rule ConstantAssignment
ruleConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAssignmentAccess().getGroup()); }
(rule__ConstantAssignment__Group__0)
{ after(grammarAccess.getConstantAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ProgramElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramElementAccess().getLocalTypeParserRuleCall_0()); }
	ruleLocalType
{ after(grammarAccess.getProgramElementAccess().getLocalTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProgramElementAccess().getExternalNameParserRuleCall_1()); }
	ruleExternalName
{ after(grammarAccess.getProgramElementAccess().getExternalNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalTypeAccess().getTypeDefParserRuleCall_0()); }
	ruleTypeDef
{ after(grammarAccess.getLocalTypeAccess().getTypeDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLocalTypeAccess().getScopeDefiningElementParserRuleCall_1()); }
	ruleScopeDefiningElement
{ after(grammarAccess.getLocalTypeAccess().getScopeDefiningElementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefiningElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeDefiningElementAccess().getEnumDefParserRuleCall_0()); }
	ruleEnumDef
{ after(grammarAccess.getScopeDefiningElementAccess().getEnumDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getScopeDefiningElementAccess().getEnsembleParserRuleCall_1()); }
	ruleEnsemble
{ after(grammarAccess.getScopeDefiningElementAccess().getEnsembleParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getScopeDefiningElementAccess().getRoleParserRuleCall_2()); }
	ruleRole
{ after(grammarAccess.getScopeDefiningElementAccess().getRoleParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
	ruleField
{ after(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getRequireParserRuleCall_1()); }
	ruleRequire
{ after(grammarAccess.getMemberAccess().getRequireParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getBehaviorParserRuleCall_2()); }
	ruleBehavior
{ after(grammarAccess.getMemberAccess().getBehaviorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getMethodParserRuleCall_3()); }
	ruleMethod
{ after(grammarAccess.getMemberAccess().getMethodParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getUpdateParserRuleCall_4()); }
	ruleUpdate
{ after(grammarAccess.getMemberAccess().getUpdateParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getConstantDefinitionParserRuleCall_5()); }
	ruleConstantDefinition
{ after(grammarAccess.getMemberAccess().getConstantDefinitionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getConstantAssignmentParserRuleCall_6()); }
	ruleConstantAssignment
{ after(grammarAccess.getMemberAccess().getConstantAssignmentParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getBinaryExprParserRuleCall_0()); }
	ruleBinaryExpr
{ after(grammarAccess.getExprAccess().getBinaryExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExprAccess().getValueParserRuleCall_1()); }
	ruleValue
{ after(grammarAccess.getExprAccess().getValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExprAccess().getFunctionCallParserRuleCall_2()); }
	ruleFunctionCall
{ after(grammarAccess.getExprAccess().getFunctionCallParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExprAccess().getQualifiedNameParserRuleCall_3()); }
	ruleQualifiedName
{ after(grammarAccess.getExprAccess().getQualifiedNameParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExprAccess().getLocalVariableParserRuleCall_4()); }
	ruleLocalVariable
{ after(grammarAccess.getExprAccess().getLocalVariableParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getBinaryOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getBinaryOperatorAccess().getAmpersandAmpersandKeyword_1()); }

	'&&' 

{ after(grammarAccess.getBinaryOperatorAccess().getAmpersandAmpersandKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getConditionalParserRuleCall_0()); }
	ruleConditional
{ after(grammarAccess.getStatementAccess().getConditionalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getOperationParserRuleCall_1()); }
	ruleOperation
{ after(grammarAccess.getStatementAccess().getOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSelfOperationParserRuleCall_2()); }
	ruleSelfOperation
{ after(grammarAccess.getStatementAccess().getSelfOperationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_3()); }
	ruleAssignment
{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForLoopParserRuleCall_4()); }
	ruleForLoop
{ after(grammarAccess.getStatementAccess().getForLoopParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueAssignment_0()); }
(rule__Value__ValueAssignment_0)
{ after(grammarAccess.getValueAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getGroup_1()); }
(rule__Value__Group_1__0)
{ after(grammarAccess.getValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getProgramAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
(rule__Program__NameAssignment_1)
{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getProgramAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getElementsAssignment_3()); }
(rule__Program__ElementsAssignment_3)*
{ after(grammarAccess.getProgramAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExternalName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalName__Group__0__Impl
	rule__ExternalName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalNameAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getExternalNameAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalName__Group__1__Impl
	rule__ExternalName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalNameAccess().getNameAssignment_1()); }
(rule__ExternalName__NameAssignment_1)
{ after(grammarAccess.getExternalNameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalNameAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getExternalNameAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeDefAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDef__Group__1__Impl
	rule__TypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
(rule__TypeDef__NameAssignment_1)
{ after(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getTypeDefAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group__0__Impl
	rule__EnumDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumDefAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group__1__Impl
	rule__EnumDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getNameAssignment_1()); }
(rule__EnumDef__NameAssignment_1)
{ after(grammarAccess.getEnumDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group__2__Impl
	rule__EnumDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumDefAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group__3__Impl
	rule__EnumDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getNamesAssignment_3()); }
(rule__EnumDef__NamesAssignment_3)
{ after(grammarAccess.getEnumDefAccess().getNamesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group__4__Impl
	rule__EnumDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getGroup_4()); }
(rule__EnumDef__Group_4__0)*
{ after(grammarAccess.getEnumDefAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEnumDefAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EnumDef__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group_4__0__Impl
	rule__EnumDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getEnumDefAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDef__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getNamesAssignment_4_1()); }
(rule__EnumDef__NamesAssignment_4_1)
{ after(grammarAccess.getEnumDefAccess().getNamesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ensemble__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ensemble__Group__0__Impl
	rule__Ensemble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getEnsembleKeyword_0()); }

	'ensemble' 

{ after(grammarAccess.getEnsembleAccess().getEnsembleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ensemble__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ensemble__Group__1__Impl
	rule__Ensemble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getNameAssignment_1()); }
(rule__Ensemble__NameAssignment_1)
{ after(grammarAccess.getEnsembleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ensemble__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ensemble__Group__2__Impl
	rule__Ensemble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnsembleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ensemble__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ensemble__Group__3__Impl
	rule__Ensemble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getElementsAssignment_3()); }
(rule__Ensemble__ElementsAssignment_3)*
{ after(grammarAccess.getEnsembleAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ensemble__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ensemble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnsembleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Role__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__0__Impl
	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getAbstractAssignment_0()); }
(rule__Role__AbstractAssignment_0)?
{ after(grammarAccess.getRoleAccess().getAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__1__Impl
	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getMixinAssignment_1()); }
(rule__Role__MixinAssignment_1)
{ after(grammarAccess.getRoleAccess().getMixinAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__2__Impl
	rule__Role__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRoleKeyword_2()); }

	'role' 

{ after(grammarAccess.getRoleAccess().getRoleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__3__Impl
	rule__Role__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameAssignment_3()); }
(rule__Role__NameAssignment_3)
{ after(grammarAccess.getRoleAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__4__Impl
	rule__Role__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getGroup_4()); }
(rule__Role__Group_4__0)?
{ after(grammarAccess.getRoleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__5__Impl
	rule__Role__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getGroup_5()); }
(rule__Role__Group_5__0)?
{ after(grammarAccess.getRoleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__6__Impl
	rule__Role__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__7__Impl
	rule__Role__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getElementsAssignment_7()); }
(rule__Role__ElementsAssignment_7)*
{ after(grammarAccess.getRoleAccess().getElementsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Role__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group_4__0__Impl
	rule__Role__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getRoleAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getExtendsRoleAssignment_4_1()); }
(rule__Role__ExtendsRoleAssignment_4_1)
{ after(grammarAccess.getRoleAccess().getExtendsRoleAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Role__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group_5__0__Impl
	rule__Role__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getWithinKeyword_5_0()); }

	'within' 

{ after(grammarAccess.getRoleAccess().getWithinKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getWithinEnsembleAssignment_5_1()); }
(rule__Role__WithinEnsembleAssignment_5_1)
{ after(grammarAccess.getRoleAccess().getWithinEnsembleAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
(rule__Field__TypeAssignment_0)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
(rule__Field__NameAssignment_1)
{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getGroup_2()); }
(rule__Field__Group_2__0)?
{ after(grammarAccess.getFieldAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Field__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_2__0__Impl
	rule__Field__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getFieldAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getInitialAssignment_2_1()); }
(rule__Field__InitialAssignment_2_1)
{ after(grammarAccess.getFieldAccess().getInitialAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Require__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Require__Group__0__Impl
	rule__Require__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireAccess().getRequireKeyword_0()); }

	'require' 

{ after(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Require__Group__1__Impl
	rule__Require__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireAccess().getExpAssignment_1()); }
(rule__Require__ExpAssignment_1)
{ after(grammarAccess.getRequireAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Require__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getRequireAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Behavior__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getBehaviorKeyword_0()); }

	'behavior' 

{ after(grammarAccess.getBehaviorAccess().getBehaviorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__1__Impl
	rule__Behavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getGroup_1()); }
(rule__Behavior__Group_1__0)?
{ after(grammarAccess.getBehaviorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__2__Impl
	rule__Behavior__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getNameAssignment_2()); }
(rule__Behavior__NameAssignment_2)
{ after(grammarAccess.getBehaviorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__3__Impl
	rule__Behavior__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getBehaviorAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__4__Impl
	rule__Behavior__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getGroup_4()); }
(rule__Behavior__Group_4__0)?
{ after(grammarAccess.getBehaviorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__5__Impl
	rule__Behavior__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getBehaviorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__6__Impl
	rule__Behavior__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getBehaviorAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__7__Impl
	rule__Behavior__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getBodyAssignment_7()); }
(rule__Behavior__BodyAssignment_7)*
{ after(grammarAccess.getBehaviorAccess().getBodyAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getBehaviorAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Behavior__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_1__0__Impl
	rule__Behavior__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getQualifierAssignment_1_0()); }
(rule__Behavior__QualifierAssignment_1_0)
{ after(grammarAccess.getBehaviorAccess().getQualifierAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getBehaviorAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Behavior__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_4__0__Impl
	rule__Behavior__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getParamsAssignment_4_0()); }
(rule__Behavior__ParamsAssignment_4_0)
{ after(grammarAccess.getBehaviorAccess().getParamsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getGroup_4_1()); }
(rule__Behavior__Group_4_1__0)*
{ after(grammarAccess.getBehaviorAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Behavior__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_4_1__0__Impl
	rule__Behavior__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getBehaviorAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getParamsAssignment_4_1_1()); }
(rule__Behavior__ParamsAssignment_4_1_1)
{ after(grammarAccess.getBehaviorAccess().getParamsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
(rule__Method__TypeAssignment_0)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
(rule__Method__NameAssignment_1)
{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3()); }
(rule__Method__Group_3__0)?
{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyAssignment_6()); }
(rule__Method__BodyAssignment_6)*
{ after(grammarAccess.getMethodAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
(rule__Method__ParamsAssignment_3_0)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3_1()); }
(rule__Method__Group_3_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__0__Impl
	rule__Method__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
(rule__Method__ParamsAssignment_3_1_1)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getQualifierAssignment_0()); }
(rule__QualifiedName__QualifierAssignment_0)
{ after(grammarAccess.getQualifiedNameAccess().getQualifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment_2()); }
(rule__QualifiedName__NameAssignment_2)
{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group__0__Impl
	rule__BinaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getBinaryExprAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group__1__Impl
	rule__BinaryExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getLhsAssignment_1()); }
(rule__BinaryExpr__LhsAssignment_1)
{ after(grammarAccess.getBinaryExprAccess().getLhsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group__2__Impl
	rule__BinaryExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getOpAssignment_2()); }
(rule__BinaryExpr__OpAssignment_2)
{ after(grammarAccess.getBinaryExprAccess().getOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group__3__Impl
	rule__BinaryExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getRhsAssignment_3()); }
(rule__BinaryExpr__RhsAssignment_3)
{ after(grammarAccess.getBinaryExprAccess().getRhsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getBinaryExprAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
(rule__FunctionCall__NameAssignment_0)
{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_2()); }
(rule__FunctionCall__Group_2__0)?
{ after(grammarAccess.getFunctionCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2__0__Impl
	rule__FunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_2_0()); }
(rule__FunctionCall__ArgumentsAssignment_2_0)
{ after(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
(rule__FunctionCall__Group_2_1__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_1__0__Impl
	rule__FunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_2_1_1()); }
(rule__FunctionCall__ArgumentsAssignment_2_1_1)
{ after(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForLoopAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getVariableAssignment_2()); }
(rule__ForLoop__VariableAssignment_2)
{ after(grammarAccess.getForLoopAccess().getVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getForLoopAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getQualifierAssignment_4()); }
(rule__ForLoop__QualifierAssignment_4)
{ after(grammarAccess.getForLoopAccess().getQualifierAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getFullStopKeyword_5()); }

	'.' 

{ after(grammarAccess.getForLoopAccess().getFullStopKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getSharedAssignment_6()); }
(rule__ForLoop__SharedAssignment_6)
{ after(grammarAccess.getForLoopAccess().getSharedAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__7__Impl
	rule__ForLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__8__Impl
	rule__ForLoop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__9__Impl
	rule__ForLoop__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getBodyAssignment_9()); }
(rule__ForLoop__BodyAssignment_9)*
{ after(grammarAccess.getForLoopAccess().getBodyAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Conditional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__0__Impl
	rule__Conditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getConditionalAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__1__Impl
	rule__Conditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConditionalAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__2__Impl
	rule__Conditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getConditionAssignment_2()); }
(rule__Conditional__ConditionAssignment_2)
{ after(grammarAccess.getConditionalAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__3__Impl
	rule__Conditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConditionalAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__4__Impl
	rule__Conditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__5__Impl
	rule__Conditional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getThenBranchAssignment_5()); }
(rule__Conditional__ThenBranchAssignment_5)*
{ after(grammarAccess.getConditionalAccess().getThenBranchAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__6__Impl
	rule__Conditional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getGroup_7()); }
(rule__Conditional__Group_7__0)?
{ after(grammarAccess.getConditionalAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Conditional__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_7__0__Impl
	rule__Conditional__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getElseKeyword_7_0()); }

	'else' 

{ after(grammarAccess.getConditionalAccess().getElseKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_7__1__Impl
	rule__Conditional__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_7__2__Impl
	rule__Conditional__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getElseBranchAssignment_7_2()); }
(rule__Conditional__ElseBranchAssignment_7_2)*
{ after(grammarAccess.getConditionalAccess().getElseBranchAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getQualifierAssignment_0()); }
(rule__Operation__QualifierAssignment_0)
{ after(grammarAccess.getOperationAccess().getQualifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_2()); }
(rule__Operation__NameAssignment_2)
{ after(grammarAccess.getOperationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_4()); }
(rule__Operation__Group_4__0)?
{ after(grammarAccess.getOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getOperationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Operation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__0__Impl
	rule__Operation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getArgumentsAssignment_4_0()); }
(rule__Operation__ArgumentsAssignment_4_0)
{ after(grammarAccess.getOperationAccess().getArgumentsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_4_1()); }
(rule__Operation__Group_4_1__0)*
{ after(grammarAccess.getOperationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4_1__0__Impl
	rule__Operation__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getArgumentsAssignment_4_1_1()); }
(rule__Operation__ArgumentsAssignment_4_1_1)
{ after(grammarAccess.getOperationAccess().getArgumentsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelfOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__0__Impl
	rule__SelfOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getSelfKeyword_0()); }

	'self' 

{ after(grammarAccess.getSelfOperationAccess().getSelfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__1__Impl
	rule__SelfOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getSelfOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__2__Impl
	rule__SelfOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getNameAssignment_2()); }
(rule__SelfOperation__NameAssignment_2)
{ after(grammarAccess.getSelfOperationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__3__Impl
	rule__SelfOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getSelfOperationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__4__Impl
	rule__SelfOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getGroup_4()); }
(rule__SelfOperation__Group_4__0)?
{ after(grammarAccess.getSelfOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__5__Impl
	rule__SelfOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSelfOperationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getSelfOperationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SelfOperation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group_4__0__Impl
	rule__SelfOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getArgumentsAssignment_4_0()); }
(rule__SelfOperation__ArgumentsAssignment_4_0)
{ after(grammarAccess.getSelfOperationAccess().getArgumentsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getGroup_4_1()); }
(rule__SelfOperation__Group_4_1__0)*
{ after(grammarAccess.getSelfOperationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelfOperation__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group_4_1__0__Impl
	rule__SelfOperation__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getSelfOperationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfOperation__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfOperation__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getArgumentsAssignment_4_1_1()); }
(rule__SelfOperation__ArgumentsAssignment_4_1_1)
{ after(grammarAccess.getSelfOperationAccess().getArgumentsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getNameAssignment_0()); }
(rule__Assignment__NameAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpAssignment_2()); }
(rule__Assignment__ExpAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssignmentAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Value__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__0__Impl
	rule__Value__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getCommercialAtKeyword_1_0()); }

	'@' 

{ after(grammarAccess.getValueAccess().getCommercialAtKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getExternAssignment_1_1()); }
(rule__Value__ExternAssignment_1_1)
{ after(grammarAccess.getValueAccess().getExternAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Update__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getUpdateKeyword_0()); }

	'update' 

{ after(grammarAccess.getUpdateAccess().getUpdateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group__2__Impl
	rule__Update__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getBodyAssignment_2()); }
(rule__Update__BodyAssignment_2)
{ after(grammarAccess.getUpdateAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group__3__Impl
	rule__Update__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getBodyAssignment_3()); }
(rule__Update__BodyAssignment_3)*
{ after(grammarAccess.getUpdateAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Update__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__0__Impl
	rule__ConstantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getAbstractAssignment_0()); }
(rule__ConstantDefinition__AbstractAssignment_0)?
{ after(grammarAccess.getConstantDefinitionAccess().getAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__1__Impl
	rule__ConstantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getConstantKeyword_1()); }

	'constant' 

{ after(grammarAccess.getConstantDefinitionAccess().getConstantKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__2__Impl
	rule__ConstantDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getTypeAssignment_2()); }
(rule__ConstantDefinition__TypeAssignment_2)
{ after(grammarAccess.getConstantDefinitionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__3__Impl
	rule__ConstantDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameAssignment_3()); }
(rule__ConstantDefinition__NameAssignment_3)
{ after(grammarAccess.getConstantDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantDefinitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstantAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantAssignment__Group__0__Impl
	rule__ConstantAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAssignmentAccess().getLhsAssignment_0()); }
(rule__ConstantAssignment__LhsAssignment_0)
{ after(grammarAccess.getConstantAssignmentAccess().getLhsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantAssignment__Group__1__Impl
	rule__ConstantAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getConstantAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantAssignment__Group__2__Impl
	rule__ConstantAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAssignmentAccess().getRhsAssignment_2()); }
(rule__ConstantAssignment__RhsAssignment_2)
{ after(grammarAccess.getConstantAssignmentAccess().getRhsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantAssignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAssignmentAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getConstantAssignmentAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Program__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getElementsProgramElementParserRuleCall_3_0()); }
	ruleProgramElement{ after(grammarAccess.getProgramAccess().getElementsProgramElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalName__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalNameAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExternalNameAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__NamesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getNamesIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getEnumDefAccess().getNamesIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__NamesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefAccess().getNamesIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumDefAccess().getNamesIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnsembleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ensemble__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnsembleAccess().getElementsMemberParserRuleCall_3_0()); }
	ruleMember{ after(grammarAccess.getEnsembleAccess().getElementsMemberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getRoleAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getRoleAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getRoleAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__MixinAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getMixinMixinKeyword_1_0()); }
(
{ before(grammarAccess.getRoleAccess().getMixinMixinKeyword_1_0()); }

	'mixin' 

{ after(grammarAccess.getRoleAccess().getMixinMixinKeyword_1_0()); }
)

{ after(grammarAccess.getRoleAccess().getMixinMixinKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__ExtendsRoleAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getExtendsRoleIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getRoleAccess().getExtendsRoleIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__WithinEnsembleAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getWithinEnsembleIDTerminalRuleCall_5_1_0()); }
	RULE_ID{ after(grammarAccess.getRoleAccess().getWithinEnsembleIDTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__ElementsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getElementsMemberParserRuleCall_7_0()); }
	ruleMember{ after(grammarAccess.getRoleAccess().getElementsMemberParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeLocalTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getFieldAccess().getTypeLocalTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getTypeLocalTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFieldAccess().getTypeLocalTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__InitialAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getInitialExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getFieldAccess().getInitialExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Require__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireAccess().getExpExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getRequireAccess().getExpExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__QualifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getQualifierScopeDefiningElementCrossReference_1_0_0()); }
(
{ before(grammarAccess.getBehaviorAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getBehaviorAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getBehaviorAccess().getQualifierScopeDefiningElementCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__ParamsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getParamsParameterParserRuleCall_4_0_0()); }
	ruleParameter{ after(grammarAccess.getBehaviorAccess().getParamsParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__ParamsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getParamsParameterParserRuleCall_4_1_1_0()); }
	ruleParameter{ after(grammarAccess.getBehaviorAccess().getParamsParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__BodyAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getBodyStatementParserRuleCall_7_0()); }
	ruleStatement{ after(grammarAccess.getBehaviorAccess().getBodyStatementParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeLocalTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getTypeLocalTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getTypeLocalTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getTypeLocalTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeLocalTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getMethodAccess().getTypeLocalTypeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getTypeLocalTypeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMethodAccess().getTypeLocalTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_0_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyStatementParserRuleCall_6_0()); }
	ruleStatement{ after(grammarAccess.getMethodAccess().getBodyStatementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__QualifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getQualifierScopeDefiningElementCrossReference_0_0()); }
(
{ before(grammarAccess.getQualifiedNameAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getQualifiedNameAccess().getQualifierScopeDefiningElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__LhsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getLhsExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getBinaryExprAccess().getLhsExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__OpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getOpBinaryOperatorParserRuleCall_2_0()); }
	ruleBinaryOperator{ after(grammarAccess.getBinaryExprAccess().getOpBinaryOperatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__RhsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getRhsExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getBinaryExprAccess().getRhsExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionCallAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgumentsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsExprParserRuleCall_2_0_0()); }
	ruleExpr{ after(grammarAccess.getFunctionCallAccess().getArgumentsExprParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgumentsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgumentsExprParserRuleCall_2_1_1_0()); }
	ruleExpr{ after(grammarAccess.getFunctionCallAccess().getArgumentsExprParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getVariableIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getForLoopAccess().getVariableIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__QualifierAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getQualifierScopeDefiningElementCrossReference_4_0()); }
(
{ before(grammarAccess.getForLoopAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getForLoopAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getForLoopAccess().getQualifierScopeDefiningElementCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__SharedAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getSharedIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getForLoopAccess().getSharedIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__BodyAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getBodyStatementParserRuleCall_9_0()); }
	ruleStatement{ after(grammarAccess.getForLoopAccess().getBodyStatementParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getConditionExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getConditionalAccess().getConditionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ThenBranchAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getThenBranchStatementParserRuleCall_5_0()); }
	ruleStatement{ after(grammarAccess.getConditionalAccess().getThenBranchStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ElseBranchAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getElseBranchStatementParserRuleCall_7_2_0()); }
	ruleStatement{ after(grammarAccess.getConditionalAccess().getElseBranchStatementParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__QualifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getQualifierScopeDefiningElementCrossReference_0_0()); }
(
{ before(grammarAccess.getOperationAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getQualifierScopeDefiningElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getQualifierScopeDefiningElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ArgumentsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getArgumentsExprParserRuleCall_4_0_0()); }
	ruleExpr{ after(grammarAccess.getOperationAccess().getArgumentsExprParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ArgumentsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getArgumentsExprParserRuleCall_4_1_1_0()); }
	ruleExpr{ after(grammarAccess.getOperationAccess().getArgumentsExprParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSelfOperationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__ArgumentsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getArgumentsExprParserRuleCall_4_0_0()); }
	ruleExpr{ after(grammarAccess.getSelfOperationAccess().getArgumentsExprParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfOperation__ArgumentsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfOperationAccess().getArgumentsExprParserRuleCall_4_1_1_0()); }
	ruleExpr{ after(grammarAccess.getSelfOperationAccess().getArgumentsExprParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getAssignmentAccess().getExpExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getValueAccess().getValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ExternAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getExternExternalNameCrossReference_1_1_0()); }
(
{ before(grammarAccess.getValueAccess().getExternExternalNameIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getValueAccess().getExternExternalNameIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getValueAccess().getExternExternalNameCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Update__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getBodyStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getUpdateAccess().getBodyStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Update__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateAccess().getBodyStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getUpdateAccess().getBodyStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getConstantDefinitionAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getConstantDefinitionAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getConstantDefinitionAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getTypeLocalTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getConstantDefinitionAccess().getTypeLocalTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantDefinitionAccess().getTypeLocalTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getConstantDefinitionAccess().getTypeLocalTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getConstantDefinitionAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAssignment__LhsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAssignmentAccess().getLhsIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstantAssignmentAccess().getLhsIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAssignment__RhsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAssignmentAccess().getRhsExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getConstantAssignmentAccess().getRhsExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


